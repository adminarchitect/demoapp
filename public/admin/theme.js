/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 125);
/******/ })
/************************************************************************/
/******/ ({

/***/ 125:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(126);


/***/ }),

/***/ 126:
/***/ (function(module, exports) {

eval("var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AdminArchitect = function () {\n    function AdminArchitect() {\n        _classCallCheck(this, AdminArchitect);\n\n        ['SidebarNavigation', 'Panels', 'Collections', 'BatchActions', 'DateControls', 'LiveSearch', 'Fancybox', 'Translatable', 'Translations'].map(function (method) {\n            AdminArchitect['handle' + method].call();\n        });\n    }\n\n    _createClass(AdminArchitect, null, [{\n        key: 'handleTranslatable',\n        value: function handleTranslatable() {\n            // When Mui tab is switched it will switch all sibling Mui tabs.\n            $('a[data-toggle=\"tab\"]', '.nav-translatable').on('shown.bs.tab', function (e) {\n                var fn = $(e.target),\n                    lc = fn.data('locale');\n\n                fn.closest('form').find('a[data-locale=\"' + lc + '\"]').tab('show');\n            });\n        }\n    }, {\n        key: 'handleTranslations',\n        value: function handleTranslations() {\n            var activate = function activate(fn) {\n                fn.addClass('active').siblings('button').removeClass('active');\n            };\n\n            $('.global button[data-locale]').click(function (_ref) {\n                var target = _ref.target;\n\n                var fn = $(target),\n                    locale = fn.data('locale');\n                $(fn).closest('table').find('tbody button[data-locale=\"' + locale + '\"]').each(function (i, button) {\n                    $(button).trigger('click');\n                });\n                activate(fn);\n            });\n\n            $('tbody button[data-locale]').click(function (_ref2) {\n                var target = _ref2.target;\n\n                var fn = $(target),\n                    locale = fn.data('locale');\n                fn.closest('tr').find('.translatable').each(function (i, e) {\n                    var item = $(e);\n                    item[item.data('locale') === locale ? 'removeClass' : 'addClass']('hidden');\n                });\n                activate(fn);\n            });\n        }\n    }, {\n        key: 'handleSidebarNavigation',\n        value: function handleSidebarNavigation() {\n            var toggleMenu = function toggleMenu(marginLeft, marginMain) {\n                var emailList = $(window).width() <= 768 && $(window).width() > 640 ? 320 : 360;\n\n                if ($('.mainpanel').css('position') === 'relative') {\n                    $('.logopanel, .leftpanel').animate({ left: marginLeft }, 'fast');\n                    $('.headerbar, .mainpanel').animate({ left: marginMain }, 'fast');\n\n                    $('.emailcontent, .email-options').animate({ left: marginMain }, 'fast');\n                    $('.emailpanel').animate({ left: marginMain + emailList }, 'fast');\n\n                    var $body = $('body');\n                    if ('hidden' === $body.css('overflow')) {\n                        $body.css({ overflow: '' });\n                    } else {\n                        $body.css({ overflow: 'hidden' });\n                    }\n                } else {\n                    $('.logopanel, .leftpanel').animate({ marginLeft: marginLeft }, 'fast');\n                    $('.headerbar, .mainpanel').animate({ marginLeft: marginMain }, 'fast');\n\n                    $('.emailcontent, .email-options').animate({ left: marginMain }, 'fast');\n                    $('.emailpanel').animate({ left: marginMain + emailList }, 'fast');\n                }\n            };\n\n            $('#menuToggle').click(function () {\n                var $panel = $('.mainpanel');\n                var collapsedMargin = $panel.css('margin-left');\n                var collapsedLeft = $panel.css('left');\n\n                if (collapsedMargin === '220px' || collapsedLeft === '220px') {\n                    toggleMenu(-220, 0);\n                } else {\n                    toggleMenu(0, 220);\n                }\n            });\n\n            $('.nav-parent > a').on('click', function (_ref3) {\n                var target = _ref3.target;\n\n                var $target = $(target);\n\n                var gran = $target.closest('.nav');\n                var parent = $target.parent();\n                var sub = parent.find('> ul');\n\n                if (sub.is(':visible')) {\n                    sub.slideUp(200);\n                    if (parent.hasClass('nav-active')) {\n                        parent.removeClass('nav-active');\n                    }\n                } else {\n                    $(gran).find('.children').each(function (i, e) {\n                        $(e).slideUp();\n                    });\n\n                    sub.slideDown(200);\n\n                    if (!parent.hasClass('active')) {\n                        parent.addClass('nav-active');\n                    }\n                }\n                return false;\n            });\n        }\n    }, {\n        key: 'handlePanels',\n        value: function handlePanels() {\n            // Close panel\n            $('.panel-remove').click(function (_ref4) {\n                var target = _ref4.target;\n\n                $(target).closest('.panel').fadeOut(function (_ref5) {\n                    var target = _ref5.target;\n\n                    $(target).remove();\n                });\n            });\n\n            // Minimize panel\n            $('.panel-minimize').click(function (_ref6) {\n                var target = _ref6.target;\n\n                var parent = $(target).closest('.panel');\n\n                parent.find('.panel-body').slideToggle(function () {\n                    var panelHeading = parent.find('.panel-heading');\n\n                    if (panelHeading.hasClass('min')) {\n                        panelHeading.removeClass('min');\n                    } else {\n                        panelHeading.addClass('min');\n                    }\n                });\n            });\n        }\n    }, {\n        key: 'handleCollections',\n        value: function handleCollections() {\n            $(document).on('click', '.toggle-collection', function (_ref7) {\n                var target = _ref7.target;\n\n                var fn = $(target);\n\n                $('input[type=checkbox].collection-item').each(function (i, e) {\n                    $(e).prop('checked', fn.prop('checked'));\n                });\n            });\n        }\n    }, {\n        key: 'handleBatchActions',\n        value: function handleBatchActions() {\n            var selected = function selected() {\n                return $('input[type=checkbox]:checked.collection-item');\n            };\n\n            $(document).on('click', '.batch-actions a[data-action]', function (_ref8) {\n                var target = _ref8.target;\n\n                if (!selected().length) {\n                    return false;\n                }\n\n                var $target = $(target);\n\n                if ((msg = $target.data('confirmation')) && !window.confirm(msg)) {\n                    return false;\n                }\n\n                $('#batch_action').val($target.data('action'));\n                $('#collection').submit();\n\n                return false;\n            });\n        }\n    }, {\n        key: 'handleDateControls',\n        value: function handleDateControls() {\n            $('[data-filter-type=\"date\"]').datetimepicker({\n                format: 'YYYY-MM-DD'\n            });\n\n            $('[data-filter-type=\"time\"]').datetimepicker({\n                format: 'hh:mm:ss'\n            });\n\n            $('[data-filter-type=\"datetime\"]').datetimepicker({\n                format: 'YYYY-MM-DD hh:mm:ss'\n            });\n\n            $('[data-filter-type=\"daterange\"]').daterangepicker({\n                locale: {\n                    format: 'YYYY-MM-DD'\n                },\n                autoUpdateInput: false,\n                ranges: {\n                    'Today': [moment(), moment()],\n                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],\n                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],\n                    'This Month': [moment().startOf('month'), moment().endOf('month')],\n                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n                }\n            }).on('apply.daterangepicker', function (ev, picker) {\n                $(this).val(picker.startDate.format('YYYY-MM-DD') + ' - ' + picker.endDate.format('YYYY-MM-DD'));\n            }).on('cancel.daterangepicker', function (ev, picker) {\n                $(this).val('');\n            });\n        }\n    }, {\n        key: 'handleLiveSearch',\n        value: function handleLiveSearch() {\n            $('[data-type=\"livesearch\"]').selectize({\n                valueField: 'id',\n                labelField: 'name',\n                searchField: ['name'],\n                create: false,\n                loadThrottle: 500,\n                maxOptions: 100,\n                load: function load(query, callback) {\n                    if (!query.length >= 3) return callback();\n\n                    var selectize = $($(this)[0].$input);\n\n                    var baseUrl = selectize.data('url');\n                    var url = baseUrl + (-1 === baseUrl.indexOf('?') ? '?' : '&');\n                    url += 'query=' + query;\n\n                    $.ajax({\n                        url: url,\n                        type: 'GET',\n                        error: callback,\n                        success: function success(res) {\n                            if (!res.hasOwnProperty('items')) {\n                                console.error('Livesearch response should have \"items\" collection. ' + 'Each element in collection must have at least 2 keys: \"id\" and \"name\"');\n\n                                return false;\n                            }\n\n                            return callback(res.items);\n                        }\n                    });\n                }\n            });\n        }\n    }, {\n        key: 'handleFancybox',\n        value: function handleFancybox() {\n            $('.fancybox').fancybox({\n                afterLoad: function afterLoad() {\n                    var width = void 0,\n                        height = void 0;\n                    if (width = $(this.element).data('width')) {\n                        this.width = width;\n                    }\n\n                    if (height = $(this.element).data('height')) {\n                        this.height = height;\n                    }\n                }\n            });\n        }\n    }]);\n\n    return AdminArchitect;\n}();\n\n$(function () {\n    return new AdminArchitect();\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///126\n");

/***/ })

/******/ });